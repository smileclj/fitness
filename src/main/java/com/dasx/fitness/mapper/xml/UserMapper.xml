<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dasx.fitness.mapper.UserMapperExt" >
  <resultMap id="BaseResultMap" type="com.dasx.fitness.entity.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="open_id" property="openId" jdbcType="VARCHAR" />
    <result column="union_id" property="unionId" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="TINYINT" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="country" property="country" jdbcType="VARCHAR" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="regular_store_id" property="regularStoreId" jdbcType="INTEGER" />
    <result column="common_time_start" property="commonTimeStart" jdbcType="TIMESTAMP" />
    <result column="common_time_end" property="commonTimeEnd" jdbcType="TIMESTAMP" />
    <result column="common_num" property="commonNum" jdbcType="INTEGER" />
    <result column="crossfit_time_start" property="crossfitTimeStart" jdbcType="TIMESTAMP" />
    <result column="crossfit_time_end" property="crossfitTimeEnd" jdbcType="TIMESTAMP" />
    <result column="crossfit_num" property="crossfitNum" jdbcType="INTEGER" />
    <result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, open_id, union_id, user_name, sex, phone, city, province, country, icon, 
    type, state, regular_store_id, common_time_start, common_time_end, common_num, crossfit_time_start, 
    crossfit_time_end, crossfit_num, login_time, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dasx.fitness.entity.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dasx.fitness.entity.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dasx.fitness.entity.User" >
    <selectKey resultType="java.lang.Integer" keyProperty="userId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (open_id, union_id, user_name, 
      sex, phone, city, province, 
      country, icon, type, 
      state, regular_store_id, common_time_start, 
      common_time_end, common_num, crossfit_time_start, 
      crossfit_time_end, crossfit_num, login_time, 
      create_time)
    values (#{openId,jdbcType=VARCHAR}, #{unionId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{sex,jdbcType=TINYINT}, #{phone,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, 
      #{country,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, 
      #{state,jdbcType=TINYINT}, #{regularStoreId,jdbcType=INTEGER}, #{commonTimeStart,jdbcType=TIMESTAMP}, 
      #{commonTimeEnd,jdbcType=TIMESTAMP}, #{commonNum,jdbcType=INTEGER}, #{crossfitTimeStart,jdbcType=TIMESTAMP}, 
      #{crossfitTimeEnd,jdbcType=TIMESTAMP}, #{crossfitNum,jdbcType=INTEGER}, #{loginTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.dasx.fitness.entity.User" >
    <selectKey resultType="java.lang.Integer" keyProperty="userId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="openId != null" >
        open_id,
      </if>
      <if test="unionId != null" >
        union_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="country != null" >
        country,
      </if>
      <if test="icon != null" >
        icon,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="regularStoreId != null" >
        regular_store_id,
      </if>
      <if test="commonTimeStart != null" >
        common_time_start,
      </if>
      <if test="commonTimeEnd != null" >
        common_time_end,
      </if>
      <if test="commonNum != null" >
        common_num,
      </if>
      <if test="crossfitTimeStart != null" >
        crossfit_time_start,
      </if>
      <if test="crossfitTimeEnd != null" >
        crossfit_time_end,
      </if>
      <if test="crossfitNum != null" >
        crossfit_num,
      </if>
      <if test="loginTime != null" >
        login_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="unionId != null" >
        #{unionId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="regularStoreId != null" >
        #{regularStoreId,jdbcType=INTEGER},
      </if>
      <if test="commonTimeStart != null" >
        #{commonTimeStart,jdbcType=TIMESTAMP},
      </if>
      <if test="commonTimeEnd != null" >
        #{commonTimeEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="commonNum != null" >
        #{commonNum,jdbcType=INTEGER},
      </if>
      <if test="crossfitTimeStart != null" >
        #{crossfitTimeStart,jdbcType=TIMESTAMP},
      </if>
      <if test="crossfitTimeEnd != null" >
        #{crossfitTimeEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="crossfitNum != null" >
        #{crossfitNum,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null" >
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dasx.fitness.entity.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.openId != null" >
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.unionId != null" >
        union_id = #{record.unionId,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=TINYINT},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null" >
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null" >
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null" >
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.icon != null" >
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.regularStoreId != null" >
        regular_store_id = #{record.regularStoreId,jdbcType=INTEGER},
      </if>
      <if test="record.commonTimeStart != null" >
        common_time_start = #{record.commonTimeStart,jdbcType=TIMESTAMP},
      </if>
      <if test="record.commonTimeEnd != null" >
        common_time_end = #{record.commonTimeEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="record.commonNum != null" >
        common_num = #{record.commonNum,jdbcType=INTEGER},
      </if>
      <if test="record.crossfitTimeStart != null" >
        crossfit_time_start = #{record.crossfitTimeStart,jdbcType=TIMESTAMP},
      </if>
      <if test="record.crossfitTimeEnd != null" >
        crossfit_time_end = #{record.crossfitTimeEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="record.crossfitNum != null" >
        crossfit_num = #{record.crossfitNum,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null" >
        login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set user_id = #{record.userId,jdbcType=INTEGER},
      open_id = #{record.openId,jdbcType=VARCHAR},
      union_id = #{record.unionId,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=TINYINT},
      phone = #{record.phone,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=VARCHAR},
      country = #{record.country,jdbcType=VARCHAR},
      icon = #{record.icon,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=TINYINT},
      state = #{record.state,jdbcType=TINYINT},
      regular_store_id = #{record.regularStoreId,jdbcType=INTEGER},
      common_time_start = #{record.commonTimeStart,jdbcType=TIMESTAMP},
      common_time_end = #{record.commonTimeEnd,jdbcType=TIMESTAMP},
      common_num = #{record.commonNum,jdbcType=INTEGER},
      crossfit_time_start = #{record.crossfitTimeStart,jdbcType=TIMESTAMP},
      crossfit_time_end = #{record.crossfitTimeEnd,jdbcType=TIMESTAMP},
      crossfit_num = #{record.crossfitNum,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dasx.fitness.entity.User" >
    update user
    <set >
      <if test="openId != null" >
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="unionId != null" >
        union_id = #{unionId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="regularStoreId != null" >
        regular_store_id = #{regularStoreId,jdbcType=INTEGER},
      </if>
      <if test="commonTimeStart != null" >
        common_time_start = #{commonTimeStart,jdbcType=TIMESTAMP},
      </if>
      <if test="commonTimeEnd != null" >
        common_time_end = #{commonTimeEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="commonNum != null" >
        common_num = #{commonNum,jdbcType=INTEGER},
      </if>
      <if test="crossfitTimeStart != null" >
        crossfit_time_start = #{crossfitTimeStart,jdbcType=TIMESTAMP},
      </if>
      <if test="crossfitTimeEnd != null" >
        crossfit_time_end = #{crossfitTimeEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="crossfitNum != null" >
        crossfit_num = #{crossfitNum,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null" >
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dasx.fitness.entity.User" >
    update user
    set open_id = #{openId,jdbcType=VARCHAR},
      union_id = #{unionId,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      phone = #{phone,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      state = #{state,jdbcType=TINYINT},
      regular_store_id = #{regularStoreId,jdbcType=INTEGER},
      common_time_start = #{commonTimeStart,jdbcType=TIMESTAMP},
      common_time_end = #{commonTimeEnd,jdbcType=TIMESTAMP},
      common_num = #{commonNum,jdbcType=INTEGER},
      crossfit_time_start = #{crossfitTimeStart,jdbcType=TIMESTAMP},
      crossfit_time_end = #{crossfitTimeEnd,jdbcType=TIMESTAMP},
      crossfit_num = #{crossfitNum,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>