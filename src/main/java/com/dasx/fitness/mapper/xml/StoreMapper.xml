<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dasx.fitness.mapper.StoreMapperExt" >
  <resultMap id="BaseResultMap" type="com.dasx.fitness.entity.Store" >
    <id column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="store_name" property="storeName" jdbcType="VARCHAR" />
    <result column="lng" property="lng" jdbcType="VARCHAR" />
    <result column="lat" property="lat" jdbcType="VARCHAR" />
    <result column="tel_number" property="telNumber" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="manager" property="manager" jdbcType="VARCHAR" />
    <result column="introduction" property="introduction" jdbcType="VARCHAR" />
    <result column="logo" property="logo" jdbcType="VARCHAR" />
    <result column="province" property="province" jdbcType="INTEGER" />
    <result column="city" property="city" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    store_id, store_name, lng, lat, tel_number, phone, manager, introduction, logo, province, 
    city, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dasx.fitness.entity.StoreExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from store
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from store
    where store_id = #{storeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from store
    where store_id = #{storeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dasx.fitness.entity.StoreExample" >
    delete from store
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dasx.fitness.entity.Store" >
    <selectKey resultType="java.lang.Integer" keyProperty="storeId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into store (store_name, lng, lat, 
      tel_number, phone, manager, 
      introduction, logo, province, 
      city, create_time, update_time
      )
    values (#{storeName,jdbcType=VARCHAR}, #{lng,jdbcType=VARCHAR}, #{lat,jdbcType=VARCHAR}, 
      #{telNumber,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{manager,jdbcType=VARCHAR}, 
      #{introduction,jdbcType=VARCHAR}, #{logo,jdbcType=VARCHAR}, #{province,jdbcType=INTEGER}, 
      #{city,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dasx.fitness.entity.Store" >
    <selectKey resultType="java.lang.Integer" keyProperty="storeId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into store
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="storeName != null" >
        store_name,
      </if>
      <if test="lng != null" >
        lng,
      </if>
      <if test="lat != null" >
        lat,
      </if>
      <if test="telNumber != null" >
        tel_number,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="manager != null" >
        manager,
      </if>
      <if test="introduction != null" >
        introduction,
      </if>
      <if test="logo != null" >
        logo,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="storeName != null" >
        #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="lng != null" >
        #{lng,jdbcType=VARCHAR},
      </if>
      <if test="lat != null" >
        #{lat,jdbcType=VARCHAR},
      </if>
      <if test="telNumber != null" >
        #{telNumber,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="manager != null" >
        #{manager,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null" >
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="logo != null" >
        #{logo,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        #{province,jdbcType=INTEGER},
      </if>
      <if test="city != null" >
        #{city,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dasx.fitness.entity.StoreExample" resultType="java.lang.Integer" >
    select count(*) from store
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update store
    <set >
      <if test="record.storeId != null" >
        store_id = #{record.storeId,jdbcType=INTEGER},
      </if>
      <if test="record.storeName != null" >
        store_name = #{record.storeName,jdbcType=VARCHAR},
      </if>
      <if test="record.lng != null" >
        lng = #{record.lng,jdbcType=VARCHAR},
      </if>
      <if test="record.lat != null" >
        lat = #{record.lat,jdbcType=VARCHAR},
      </if>
      <if test="record.telNumber != null" >
        tel_number = #{record.telNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.manager != null" >
        manager = #{record.manager,jdbcType=VARCHAR},
      </if>
      <if test="record.introduction != null" >
        introduction = #{record.introduction,jdbcType=VARCHAR},
      </if>
      <if test="record.logo != null" >
        logo = #{record.logo,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null" >
        province = #{record.province,jdbcType=INTEGER},
      </if>
      <if test="record.city != null" >
        city = #{record.city,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update store
    set store_id = #{record.storeId,jdbcType=INTEGER},
      store_name = #{record.storeName,jdbcType=VARCHAR},
      lng = #{record.lng,jdbcType=VARCHAR},
      lat = #{record.lat,jdbcType=VARCHAR},
      tel_number = #{record.telNumber,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      manager = #{record.manager,jdbcType=VARCHAR},
      introduction = #{record.introduction,jdbcType=VARCHAR},
      logo = #{record.logo,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=INTEGER},
      city = #{record.city,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dasx.fitness.entity.Store" >
    update store
    <set >
      <if test="storeName != null" >
        store_name = #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="lng != null" >
        lng = #{lng,jdbcType=VARCHAR},
      </if>
      <if test="lat != null" >
        lat = #{lat,jdbcType=VARCHAR},
      </if>
      <if test="telNumber != null" >
        tel_number = #{telNumber,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="manager != null" >
        manager = #{manager,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null" >
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="logo != null" >
        logo = #{logo,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        province = #{province,jdbcType=INTEGER},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where store_id = #{storeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dasx.fitness.entity.Store" >
    update store
    set store_name = #{storeName,jdbcType=VARCHAR},
      lng = #{lng,jdbcType=VARCHAR},
      lat = #{lat,jdbcType=VARCHAR},
      tel_number = #{telNumber,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      manager = #{manager,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      logo = #{logo,jdbcType=VARCHAR},
      province = #{province,jdbcType=INTEGER},
      city = #{city,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where store_id = #{storeId,jdbcType=INTEGER}
  </update>
</mapper>