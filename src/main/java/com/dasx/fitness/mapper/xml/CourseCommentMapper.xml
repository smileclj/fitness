<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dasx.fitness.mapper.CourseCommentMapperExt" >
  <resultMap id="BaseResultMap" type="com.dasx.fitness.entity.CourseComment" >
    <id column="course_comment_id" property="courseCommentId" jdbcType="INTEGER" />
    <result column="course_id" property="courseId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="star" property="star" jdbcType="DECIMAL" />
    <result column="train_feel" property="trainFeel" jdbcType="TINYINT" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    course_comment_id, course_id, user_id, star, train_feel, content, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dasx.fitness.entity.CourseCommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from course_comment
    where course_comment_id = #{courseCommentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from course_comment
    where course_comment_id = #{courseCommentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dasx.fitness.entity.CourseCommentExample" >
    delete from course_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dasx.fitness.entity.CourseComment" >
    <selectKey resultType="java.lang.Integer" keyProperty="courseCommentId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course_comment (course_id, user_id, star, 
      train_feel, content, create_time
      )
    values (#{courseId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{star,jdbcType=DECIMAL}, 
      #{trainFeel,jdbcType=TINYINT}, #{content,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dasx.fitness.entity.CourseComment" >
    <selectKey resultType="java.lang.Integer" keyProperty="courseCommentId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="star != null" >
        star,
      </if>
      <if test="trainFeel != null" >
        train_feel,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="star != null" >
        #{star,jdbcType=DECIMAL},
      </if>
      <if test="trainFeel != null" >
        #{trainFeel,jdbcType=TINYINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dasx.fitness.entity.CourseCommentExample" resultType="java.lang.Integer" >
    select count(*) from course_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update course_comment
    <set >
      <if test="record.courseCommentId != null" >
        course_comment_id = #{record.courseCommentId,jdbcType=INTEGER},
      </if>
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.star != null" >
        star = #{record.star,jdbcType=DECIMAL},
      </if>
      <if test="record.trainFeel != null" >
        train_feel = #{record.trainFeel,jdbcType=TINYINT},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update course_comment
    set course_comment_id = #{record.courseCommentId,jdbcType=INTEGER},
      course_id = #{record.courseId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      star = #{record.star,jdbcType=DECIMAL},
      train_feel = #{record.trainFeel,jdbcType=TINYINT},
      content = #{record.content,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dasx.fitness.entity.CourseComment" >
    update course_comment
    <set >
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="star != null" >
        star = #{star,jdbcType=DECIMAL},
      </if>
      <if test="trainFeel != null" >
        train_feel = #{trainFeel,jdbcType=TINYINT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where course_comment_id = #{courseCommentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dasx.fitness.entity.CourseComment" >
    update course_comment
    set course_id = #{courseId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      star = #{star,jdbcType=DECIMAL},
      train_feel = #{trainFeel,jdbcType=TINYINT},
      content = #{content,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where course_comment_id = #{courseCommentId,jdbcType=INTEGER}
  </update>
</mapper>