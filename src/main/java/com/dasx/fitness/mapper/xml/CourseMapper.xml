<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dasx.fitness.mapper.CourseMapperExt" >
  <resultMap id="BaseResultMap" type="com.dasx.fitness.entity.Course" >
    <id column="course_id" property="courseId" jdbcType="INTEGER" />
    <result column="course_name" property="courseName" jdbcType="VARCHAR" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="coach_name" property="coachName" jdbcType="VARCHAR" />
    <result column="classroom" property="classroom" jdbcType="VARCHAR" />
    <result column="train_level" property="trainLevel" jdbcType="INTEGER" />
    <result column="logo" property="logo" jdbcType="VARCHAR" />
    <result column="slide_pic" property="slidePic" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    course_id, course_name, store_id, type, start_time, end_time, coach_name, classroom, 
    train_level, logo, slide_pic, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dasx.fitness.entity.CourseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from course
    where course_id = #{courseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from course
    where course_id = #{courseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dasx.fitness.entity.CourseExample" >
    delete from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dasx.fitness.entity.Course" >
    <selectKey resultType="java.lang.Integer" keyProperty="courseId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course (course_name, store_id, type, 
      start_time, end_time, coach_name, 
      classroom, train_level, logo, 
      slide_pic, remark)
    values (#{courseName,jdbcType=VARCHAR}, #{storeId,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{coachName,jdbcType=VARCHAR}, 
      #{classroom,jdbcType=VARCHAR}, #{trainLevel,jdbcType=INTEGER}, #{logo,jdbcType=VARCHAR}, 
      #{slidePic,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.dasx.fitness.entity.Course" >
    <selectKey resultType="java.lang.Integer" keyProperty="courseId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="courseName != null" >
        course_name,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="coachName != null" >
        coach_name,
      </if>
      <if test="classroom != null" >
        classroom,
      </if>
      <if test="trainLevel != null" >
        train_level,
      </if>
      <if test="logo != null" >
        logo,
      </if>
      <if test="slidePic != null" >
        slide_pic,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="courseName != null" >
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="coachName != null" >
        #{coachName,jdbcType=VARCHAR},
      </if>
      <if test="classroom != null" >
        #{classroom,jdbcType=VARCHAR},
      </if>
      <if test="trainLevel != null" >
        #{trainLevel,jdbcType=INTEGER},
      </if>
      <if test="logo != null" >
        #{logo,jdbcType=VARCHAR},
      </if>
      <if test="slidePic != null" >
        #{slidePic,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dasx.fitness.entity.CourseExample" resultType="java.lang.Integer" >
    select count(*) from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update course
    <set >
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.courseName != null" >
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.storeId != null" >
        store_id = #{record.storeId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.coachName != null" >
        coach_name = #{record.coachName,jdbcType=VARCHAR},
      </if>
      <if test="record.classroom != null" >
        classroom = #{record.classroom,jdbcType=VARCHAR},
      </if>
      <if test="record.trainLevel != null" >
        train_level = #{record.trainLevel,jdbcType=INTEGER},
      </if>
      <if test="record.logo != null" >
        logo = #{record.logo,jdbcType=VARCHAR},
      </if>
      <if test="record.slidePic != null" >
        slide_pic = #{record.slidePic,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update course
    set course_id = #{record.courseId,jdbcType=INTEGER},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      store_id = #{record.storeId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      coach_name = #{record.coachName,jdbcType=VARCHAR},
      classroom = #{record.classroom,jdbcType=VARCHAR},
      train_level = #{record.trainLevel,jdbcType=INTEGER},
      logo = #{record.logo,jdbcType=VARCHAR},
      slide_pic = #{record.slidePic,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dasx.fitness.entity.Course" >
    update course
    <set >
      <if test="courseName != null" >
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="coachName != null" >
        coach_name = #{coachName,jdbcType=VARCHAR},
      </if>
      <if test="classroom != null" >
        classroom = #{classroom,jdbcType=VARCHAR},
      </if>
      <if test="trainLevel != null" >
        train_level = #{trainLevel,jdbcType=INTEGER},
      </if>
      <if test="logo != null" >
        logo = #{logo,jdbcType=VARCHAR},
      </if>
      <if test="slidePic != null" >
        slide_pic = #{slidePic,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dasx.fitness.entity.Course" >
    update course
    set course_name = #{courseName,jdbcType=VARCHAR},
      store_id = #{storeId,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      coach_name = #{coachName,jdbcType=VARCHAR},
      classroom = #{classroom,jdbcType=VARCHAR},
      train_level = #{trainLevel,jdbcType=INTEGER},
      logo = #{logo,jdbcType=VARCHAR},
      slide_pic = #{slidePic,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
</mapper>