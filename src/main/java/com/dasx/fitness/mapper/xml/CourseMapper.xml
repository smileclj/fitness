<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dasx.fitness.mapper.CourseMapperExt">
  <resultMap id="BaseResultMap" type="com.dasx.fitness.entity.Course">
    <id column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="coach_id" jdbcType="INTEGER" property="coachId" />
    <result column="classroom" jdbcType="VARCHAR" property="classroom" />
    <result column="train_level" jdbcType="INTEGER" property="trainLevel" />
    <result column="logo" jdbcType="VARCHAR" property="logo" />
    <result column="slide_pic" jdbcType="VARCHAR" property="slidePic" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    course_id, course_name, store_id, type, coach_id, classroom, train_level, logo, slide_pic, 
    remark, is_delete
  </sql>
  <select id="selectByExample" parameterType="com.dasx.fitness.entity.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where course_id = #{courseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course
    where course_id = #{courseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dasx.fitness.entity.CourseExample">
    delete from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dasx.fitness.entity.Course">
    <selectKey keyProperty="courseId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course (course_name, store_id, type, 
      coach_id, classroom, train_level, 
      logo, slide_pic, remark, 
      is_delete)
    values (#{courseName,jdbcType=VARCHAR}, #{storeId,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, 
      #{coachId,jdbcType=INTEGER}, #{classroom,jdbcType=VARCHAR}, #{trainLevel,jdbcType=INTEGER}, 
      #{logo,jdbcType=VARCHAR}, #{slidePic,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{isDelete,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.dasx.fitness.entity.Course">
    <selectKey keyProperty="courseId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courseName != null">
        course_name,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="coachId != null">
        coach_id,
      </if>
      <if test="classroom != null">
        classroom,
      </if>
      <if test="trainLevel != null">
        train_level,
      </if>
      <if test="logo != null">
        logo,
      </if>
      <if test="slidePic != null">
        slide_pic,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="coachId != null">
        #{coachId,jdbcType=INTEGER},
      </if>
      <if test="classroom != null">
        #{classroom,jdbcType=VARCHAR},
      </if>
      <if test="trainLevel != null">
        #{trainLevel,jdbcType=INTEGER},
      </if>
      <if test="logo != null">
        #{logo,jdbcType=VARCHAR},
      </if>
      <if test="slidePic != null">
        #{slidePic,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dasx.fitness.entity.CourseExample" resultType="java.lang.Integer">
    select count(*) from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course
    <set>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.courseName != null">
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.coachId != null">
        coach_id = #{record.coachId,jdbcType=INTEGER},
      </if>
      <if test="record.classroom != null">
        classroom = #{record.classroom,jdbcType=VARCHAR},
      </if>
      <if test="record.trainLevel != null">
        train_level = #{record.trainLevel,jdbcType=INTEGER},
      </if>
      <if test="record.logo != null">
        logo = #{record.logo,jdbcType=VARCHAR},
      </if>
      <if test="record.slidePic != null">
        slide_pic = #{record.slidePic,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course
    set course_id = #{record.courseId,jdbcType=INTEGER},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      store_id = #{record.storeId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      coach_id = #{record.coachId,jdbcType=INTEGER},
      classroom = #{record.classroom,jdbcType=VARCHAR},
      train_level = #{record.trainLevel,jdbcType=INTEGER},
      logo = #{record.logo,jdbcType=VARCHAR},
      slide_pic = #{record.slidePic,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      is_delete = #{record.isDelete,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dasx.fitness.entity.Course">
    update course
    <set>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="coachId != null">
        coach_id = #{coachId,jdbcType=INTEGER},
      </if>
      <if test="classroom != null">
        classroom = #{classroom,jdbcType=VARCHAR},
      </if>
      <if test="trainLevel != null">
        train_level = #{trainLevel,jdbcType=INTEGER},
      </if>
      <if test="logo != null">
        logo = #{logo,jdbcType=VARCHAR},
      </if>
      <if test="slidePic != null">
        slide_pic = #{slidePic,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dasx.fitness.entity.Course">
    update course
    set course_name = #{courseName,jdbcType=VARCHAR},
      store_id = #{storeId,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      coach_id = #{coachId,jdbcType=INTEGER},
      classroom = #{classroom,jdbcType=VARCHAR},
      train_level = #{trainLevel,jdbcType=INTEGER},
      logo = #{logo,jdbcType=VARCHAR},
      slide_pic = #{slidePic,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
</mapper>